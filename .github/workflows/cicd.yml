name: 'Terraform_Destroy GKE Resources'

# Trigger points
on:
  workflow_dispatch: # Trigger manually to prevent accidental execution

jobs:
  terraform:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      # Step 1: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Authenticate to GCP
      - name: Authenticate to GCP
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_JSON }}
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS" > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Step 4: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 5: Run Terraform Destroy
      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=us-central1"

      # Optional: Terraform Apply (Commented Out)
      # Uncomment this step to apply Terraform configuration instead of destroying
      # - name: Terraform Apply
      #   run: terraform apply -auto-approve -input=false -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=us-central1"

      # Optional: Post-destroy cleanup
      - name: Cleanup Terraform State
        if: always()
        run: |
          rm -rf .terraform
          rm -f terraform.tfstate terraform.tfstate.backup